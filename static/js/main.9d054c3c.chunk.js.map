{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getData","title","a","fetch","response","json","movieOb","FindMovie","addMovie","useState","setTitle","setMovie","errorMessage","setError","getMovie","Response","Error","htmlFor","type","id","placeholder","classnames","value","onChange","event","target","onClick","disabled","length","App","state","some","el","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d054c3c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=9f56fe16';\n\nexport const getData = async (title:string) => {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n  const movieOb = await response.json();\n\n  return movieOb;\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getData } from '../../api/movies';\n\ntype Props = {\n  addMovie: (movie: Movie) => void | boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setError] = useState('');\n\n  const getMovie = async () => {\n    try {\n      const response = await getData(title);\n\n      if (response.Response === 'False') {\n        throw new Error('err');\n      }\n\n      setMovie(response);\n    } catch (error) {\n      setMovie(null);\n      setError('Can\\'t find a movie with such a title');\n    }\n  };\n\n  const chooseMovie = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError('');\n  };\n\n  const addToList = () => {\n    if (movie) {\n      if (addMovie(movie) === false) {\n        setError('This movie already exist in your list');\n      }\n\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classnames(\n                  'input',\n                  { 'is-danger': errorMessage },\n                )}\n                value={title}\n                onChange={chooseMovie}\n              />\n            </div>\n          </label>\n        </div>\n\n        {errorMessage}\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n              disabled={errorMessage.length > 0 || !title}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToList}\n              disabled={errorMessage.length > 0 || !title || !movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (movie:Movie) => {\n    if (this.state.movies.some(el => el.imdbID === movie.imdbID)) {\n      return false;\n    }\n\n    return this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}